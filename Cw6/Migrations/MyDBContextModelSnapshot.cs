// <auto-generated />
using System;
using Cw6.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cw6.Migrations
{
    [DbContext(typeof(MyDBContext))]
    partial class MyDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cw6.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDoctor"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdDoctor");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            Email = "a.leczulski@nfz.pl",
                            FirstName = "Arkadiusz",
                            LastName = "Leczulski"
                        },
                        new
                        {
                            IdDoctor = 2,
                            Email = "c.kolański@nfz.pl",
                            FirstName = "Cezary",
                            LastName = "Kolański"
                        });
                });

            modelBuilder.Entity("Cw6.Models.Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMedicament"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdMedicament");

                    b.ToTable("Medicaments");

                    b.HasData(
                        new
                        {
                            IdMedicament = 1,
                            Description = "Dobry na wszystko",
                            Name = "Paracetamol",
                            Type = "Tabletki"
                        },
                        new
                        {
                            IdMedicament = 2,
                            Description = "Na kaszelek suchy i mokry",
                            Name = "Mucosolvan",
                            Type = "Syrop"
                        });
                });

            modelBuilder.Entity("Cw6.Models.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPatient");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            IdPatient = 1,
                            Birthdate = new DateTime(2024, 6, 4, 20, 36, 37, 980, DateTimeKind.Local).AddTicks(3710),
                            FirstName = "Jan",
                            LastName = "Kowalski"
                        },
                        new
                        {
                            IdPatient = 2,
                            Birthdate = new DateTime(2024, 6, 4, 20, 36, 37, 980, DateTimeKind.Local).AddTicks(3776),
                            FirstName = "Adam",
                            LastName = "Sierawski"
                        });
                });

            modelBuilder.Entity("Cw6.Models.Prescription", b =>
                {
                    b.Property<int>("IdPrescriptions")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPrescriptions"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.HasKey("IdPrescriptions");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdPatient");

                    b.ToTable("Prescriptions");

                    b.HasData(
                        new
                        {
                            IdPrescriptions = 1,
                            Date = new DateTime(2024, 6, 4, 20, 36, 37, 980, DateTimeKind.Local).AddTicks(4261),
                            DueDate = new DateTime(2024, 6, 14, 20, 36, 37, 980, DateTimeKind.Local).AddTicks(4265),
                            IdDoctor = 2,
                            IdPatient = 1
                        },
                        new
                        {
                            IdPrescriptions = 2,
                            Date = new DateTime(2024, 6, 4, 20, 36, 37, 980, DateTimeKind.Local).AddTicks(4271),
                            DueDate = new DateTime(2024, 6, 12, 20, 36, 37, 980, DateTimeKind.Local).AddTicks(4273),
                            IdDoctor = 1,
                            IdPatient = 2
                        });
                });

            modelBuilder.Entity("Cw6.Models.Prescription_Medicament", b =>
                {
                    b.Property<int>("IdPrescription")
                        .HasColumnType("int");

                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Dose")
                        .HasColumnType("int");

                    b.HasKey("IdPrescription", "IdMedicament")
                        .HasName("Prescription_Medicament_PK");

                    b.HasIndex("IdMedicament");

                    b.ToTable("Prescription_Medicament", (string)null);

                    b.HasData(
                        new
                        {
                            IdPrescription = 2,
                            IdMedicament = 1,
                            Details = "2 razy dziennie",
                            Dose = 3
                        },
                        new
                        {
                            IdPrescription = 1,
                            IdMedicament = 2,
                            Details = "3 razy dziennie",
                            Dose = 2
                        });
                });

            modelBuilder.Entity("Cw6.Models.Prescription", b =>
                {
                    b.HasOne("Cw6.Models.Doctor", "Doctor")
                        .WithMany("DoctorPrescriptions")
                        .HasForeignKey("IdDoctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cw6.Models.Patient", "Patient")
                        .WithMany("PatientPrescriptions")
                        .HasForeignKey("IdPatient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Cw6.Models.Prescription_Medicament", b =>
                {
                    b.HasOne("Cw6.Models.Medicament", "Medicament")
                        .WithMany("MedicamentPrescription")
                        .HasForeignKey("IdMedicament")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cw6.Models.Prescription", "Prescription")
                        .WithMany("PrescriptionMedicament")
                        .HasForeignKey("IdPrescription")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicament");

                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("Cw6.Models.Doctor", b =>
                {
                    b.Navigation("DoctorPrescriptions");
                });

            modelBuilder.Entity("Cw6.Models.Medicament", b =>
                {
                    b.Navigation("MedicamentPrescription");
                });

            modelBuilder.Entity("Cw6.Models.Patient", b =>
                {
                    b.Navigation("PatientPrescriptions");
                });

            modelBuilder.Entity("Cw6.Models.Prescription", b =>
                {
                    b.Navigation("PrescriptionMedicament");
                });
#pragma warning restore 612, 618
        }
    }
}
